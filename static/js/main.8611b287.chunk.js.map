{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todoId","filterStatus","filterTitle","selectUser","userId","setState","props","onSelectUser","filterHandler","event","target","value","inputHandler","filterByStatus","todo","completed","filterByTitle","title","toLowerCase","includes","todos","this","filteredTodos","filter","className","classNames","onChange","placeholder","map","key","id","type","checked","readOnly","onClick","React","Component","request","url","fetch","then","response","ok","Error","status","statusText","json","data","getUser","CurrentUser","user","prevProps","name","email","phone","onRemoveUser","App","selectedUserId","removeUser","selectedUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8611b287.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    todoId: 0,\n    filterStatus: 'all',\n    filterTitle: '',\n  }\n\n  selectUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.onSelectUser(userId);\n  }\n\n  filterHandler = (event) => {\n    this.setState({\n      filterStatus: event.target.value,\n    });\n  }\n\n  inputHandler = (event) => {\n    this.setState({\n      filterTitle: event.target.value,\n    });\n  }\n\n  filterByStatus = (todo) => {\n    const { filterStatus } = this.state;\n\n    switch (filterStatus) {\n      case 'completed':\n        return todo.completed;\n      case 'active':\n        return !todo.completed;\n      default: return true;\n    }\n  }\n\n  filterByTitle = (todo) => {\n    const { filterTitle } = this.state;\n\n    if (todo.title === null) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return todo.title.toLowerCase().includes(filterTitle.toLowerCase());\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { todoId } = this.state;\n\n    const filteredTodos = todos\n      .filter(this.filterByStatus)\n      .filter(this.filterByTitle);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form classNames=\"TodoList__form\">\n            <label className=\"TodoList__label\">\n              Todo filter:\n              <input\n                onChange={this.inputHandler}\n                className=\"TodoList__filter\"\n                placeholder=\"Enter part of title\"\n              />\n            </label>\n\n            <label className=\"TodoList__label\">\n              Filter by status:\n              <select\n                className=\"TodoList__select\"\n                onChange={event => this.filterHandler(event)}\n              >\n                <option value=\"all\">Show all todos</option>\n                <option value=\"active\">Show active todos</option>\n                <option value=\"completed\">Show completed todos</option>\n              </select>\n            </label>\n          </form>\n\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => this.selectUser(todo.id, todo.userId)}\n                  className={classNames('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected': todo.id === todoId,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onSelectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(response => response.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    const { userId } = this.props;\n\n    getUser(userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    const { userId } = this.props;\n\n    getUser(userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { name, email, phone, id } = this.state.user;\n    const { onRemoveUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={onRemoveUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  onRemoveUser: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  removeUser = () => this.setState({ selectedUserId: 0 })\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUser={selectedUserId}\n            onSelectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onRemoveUser={this.removeUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}